<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.renren.modules.sys.dao.ProductDefineMapper" >
  <resultMap id="BaseResultMap" type="io.renren.modules.sys.entity.ProductDefine" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pr_name" property="prName" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="model_type" property="modelType" jdbcType="VARCHAR" />
    <result column="product_type" property="productType" jdbcType="VARCHAR" />
    <result column="shape" property="shape" jdbcType="VARCHAR" />
    <result column="function_unit" property="functionUnit" jdbcType="VARCHAR" />
    <result column="eval_num" property="evalNum" jdbcType="DOUBLE" />
    <result column="system_boundary" property="systemBoundary" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="VARCHAR" />
    <result column="industry_id" property="industryId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pr_name, company_name, model_type, product_type, shape, function_unit, eval_num, 
    system_boundary, year, industry_id, user_id, insert_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="io.renren.modules.sys.entity.ProductDefineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_define
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product_define
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product_define
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="io.renren.modules.sys.entity.ProductDefineExample" >
    delete from product_define
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.renren.modules.sys.entity.ProductDefine" >
    insert into product_define (id, pr_name, company_name, 
      model_type, product_type, shape, 
      function_unit, eval_num, system_boundary, 
      year, industry_id, user_id, 
      insert_time)
    values (#{id,jdbcType=INTEGER}, #{prName,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{modelType,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, #{shape,jdbcType=VARCHAR}, 
      #{functionUnit,jdbcType=VARCHAR}, #{evalNum,jdbcType=DOUBLE}, #{systemBoundary,jdbcType=INTEGER}, 
      #{year,jdbcType=VARCHAR}, #{industryId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{insertTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.renren.modules.sys.entity.ProductDefine" >
    insert into product_define
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="prName != null" >
        pr_name,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="modelType != null" >
        model_type,
      </if>
      <if test="productType != null" >
        product_type,
      </if>
      <if test="shape != null" >
        shape,
      </if>
      <if test="functionUnit != null" >
        function_unit,
      </if>
      <if test="evalNum != null" >
        eval_num,
      </if>
      <if test="systemBoundary != null" >
        system_boundary,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="industryId != null" >
        industry_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="prName != null" >
        #{prName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="modelType != null" >
        #{modelType,jdbcType=VARCHAR},
      </if>
      <if test="productType != null" >
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="shape != null" >
        #{shape,jdbcType=VARCHAR},
      </if>
      <if test="functionUnit != null" >
        #{functionUnit,jdbcType=VARCHAR},
      </if>
      <if test="evalNum != null" >
        #{evalNum,jdbcType=DOUBLE},
      </if>
      <if test="systemBoundary != null" >
        #{systemBoundary,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="industryId != null" >
        #{industryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.renren.modules.sys.entity.ProductDefineExample" resultType="java.lang.Integer" >
    select count(*) from product_define
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product_define
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.prName != null" >
        pr_name = #{record.prName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelType != null" >
        model_type = #{record.modelType,jdbcType=VARCHAR},
      </if>
      <if test="record.productType != null" >
        product_type = #{record.productType,jdbcType=VARCHAR},
      </if>
      <if test="record.shape != null" >
        shape = #{record.shape,jdbcType=VARCHAR},
      </if>
      <if test="record.functionUnit != null" >
        function_unit = #{record.functionUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.evalNum != null" >
        eval_num = #{record.evalNum,jdbcType=DOUBLE},
      </if>
      <if test="record.systemBoundary != null" >
        system_boundary = #{record.systemBoundary,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.industryId != null" >
        industry_id = #{record.industryId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.insertTime != null" >
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product_define
    set id = #{record.id,jdbcType=INTEGER},
      pr_name = #{record.prName,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      model_type = #{record.modelType,jdbcType=VARCHAR},
      product_type = #{record.productType,jdbcType=VARCHAR},
      shape = #{record.shape,jdbcType=VARCHAR},
      function_unit = #{record.functionUnit,jdbcType=VARCHAR},
      eval_num = #{record.evalNum,jdbcType=DOUBLE},
      system_boundary = #{record.systemBoundary,jdbcType=INTEGER},
      year = #{record.year,jdbcType=VARCHAR},
      industry_id = #{record.industryId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.renren.modules.sys.entity.ProductDefine" >
    update product_define
    <set >
      <if test="prName != null" >
        pr_name = #{prName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="modelType != null" >
        model_type = #{modelType,jdbcType=VARCHAR},
      </if>
      <if test="productType != null" >
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="shape != null" >
        shape = #{shape,jdbcType=VARCHAR},
      </if>
      <if test="functionUnit != null" >
        function_unit = #{functionUnit,jdbcType=VARCHAR},
      </if>
      <if test="evalNum != null" >
        eval_num = #{evalNum,jdbcType=DOUBLE},
      </if>
      <if test="systemBoundary != null" >
        system_boundary = #{systemBoundary,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="industryId != null" >
        industry_id = #{industryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.renren.modules.sys.entity.ProductDefine" >
    update product_define
    set pr_name = #{prName,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      model_type = #{modelType,jdbcType=VARCHAR},
      product_type = #{productType,jdbcType=VARCHAR},
      shape = #{shape,jdbcType=VARCHAR},
      function_unit = #{functionUnit,jdbcType=VARCHAR},
      eval_num = #{evalNum,jdbcType=DOUBLE},
      system_boundary = #{systemBoundary,jdbcType=INTEGER},
      year = #{year,jdbcType=VARCHAR},
      industry_id = #{industryId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>