<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.sys.dao.DictDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.sys.entity.DictEntity" id="dictMap">
        <result property="typeId" column="type_id"/>
        <result property="secondId" column="second_id"/>
        <result property="secondName" column="second_name"/>
        <result property="desc" column="desc"/>
        <result property="createdTime" column="created_time"/>
        <result property="userId" column="user_id"/>
        <result property="unit" column="unit"/>
    </resultMap>
    <select id="getQueryList" parameterType="java.util.HashMap" resultMap="dictMap">
        SELECT * FROM dict WHERE type_id = #{typeid} AND user_id = #{userid}
    </select>
    <select id="getByseconId" parameterType="java.lang.Integer" resultMap="dictMap">
        SELECT * FROM dict WHERE second_id = #{0}
    </select>
    <select id="updateBysencondId" parameterType="io.renren.modules.sys.entity.DictEntity">
        UPDATE dict set second_name = #{secondName}, `desc` = #{desc} WHERE second_id = #{secondId}
    </select>
    <delete id="removeSecondIds" parameterType="java.util.List">
        delete from dict where second_id in
        <foreach collection="list" open="(" index="index" item="item" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <insert id="saveDict" parameterType="io.renren.modules.sys.entity.DictEntity" useGeneratedKeys="true"
            keyProperty="secondId">
      INSERT INTO dict(type_id, second_name, `desc`, `user_id`, unit) VALUES (#{typeId}, #{secondName},
      #{desc}, #{userId}, #{unit})
    </insert>

    <select id="quertByTypeId" parameterType="java.lang.Integer" resultMap="dictMap">
        SELECT * FROM dict WHERE type_id = #{0}
    </select>
    <select id="querySystemBoundry" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT d.second_id FROM product_define p JOIN dict d on p.system_boundary = d.second_id AND p.id = #{0}
    </select>

    <select id="query" parameterType="java.util.Map" resultMap="dictMap">
        SELECT * FROM dict where 1 = 1
        <if test='typeId gt -1'>
            AND type_id = #{typeId}
        </if>
        <if test='materialName != null and materialName!=""'>
            AND second_name like CONCAT('%',#{materialName},'%')
        </if>
        GROUP BY second_id
    </select>
    <select id="maxSecondId" resultType="java.lang.Integer">
        SELECT MAX(second_id) FROM dict
    </select>
</mapper>